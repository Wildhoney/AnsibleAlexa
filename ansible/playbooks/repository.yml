---
- hosts: all
  name: Repository
  connection: local
  vars:

    local_magento_repository_path: ../../websites/magento
    local_wordpress_repository_path: ../../websites/wordpress
    local_database_path: ../files/database

  tasks:

    - name: Include Configuration
      include_vars: ../../ansiblealexa.yml

      # Databases

    - name: Remove Existing SQL GZ
      command: rm -f {{ local_database_path }}/{{ item }}.sql.gz
      with_items:
        - magento
        - wordpress

    - name: Fetch Magento Database
      command: curl {{ database_path }}/{{ item }}.sql.gz -o {{ local_database_path }}/{{ item }}.sql.gz
      with_items:
        - magento
        - wordpress

    - name: Remove Existing SQL
      command: rm -f {{ local_database_path }}/{{ item }}.sql
      with_items:
        - magento
        - wordpress

    - name: Decompress Magento
      command: gzip -d {{ local_database_path }}/{{ item }}.sql.gz
      with_items:
        - magento
        - wordpress

    # Magento Repository

    - name: Check Magento
      stat: path=../../websites/magento/.git
      register: check_magento_path

    - name: Clone Magento
      git: repo={{ repository_magento }} dest={{ local_magento_repository_path }}
      when: check_magento_path.stat.exists == false

    - name: Clear Magento Lightspeed
      command: rm -rf /usr/share/nginx/www/magento/web-root/var/lightspeed/*
      ignore_errors: yes

    - name: Clear Magento Cache
      command: rm -rf /usr/share/nginx/www/magento/web-root/var/cache/*
      ignore_errors: yes

    # Wordpress Repository

    - name: Check Wordpress
      stat: path=../../websites/wordpress/.git
      register: check_wordpress_path

    - name: Clone Wordpress
      git: repo={{ repository_wordpress }} dest={{ local_wordpress_repository_path }}
      when: check_wordpress_path.stat.exists == false